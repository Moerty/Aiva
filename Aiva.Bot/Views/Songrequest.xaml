<controls:MetroContentControl
    x:Class="Aiva.Bot.Views.Songrequest"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:internal="clr-namespace:Aiva.Bot.Internal"
    xmlns:local="clr-namespace:Aiva.Bot.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mvvm="clr-namespace:Aiva.Bot.ViewModels"
    xmlns:yt="clr-namespace:YoutubePlayerLib.Cef;assembly=YoutubePlayerLib"
    Width="720"
    Height="470"
    d:DataContext="{d:DesignInstance d:Type=mvvm:Songrequest}"
    mc:Ignorable="d">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="85" />
            <RowDefinition Height="35" />
            <RowDefinition Height="130" />
            <RowDefinition Height="288*" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <ToggleButton
                Width="80"
                Height="80"
                Margin="10,0,0,0"
                HorizontalAlignment="Left"
                IsChecked="{Binding Handler.IsStarted}"
                Style="{DynamicResource MetroCircleToggleButtonStyle}">
                <Rectangle
                    Width="46"
                    Height="46"
                    Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_control_play_live}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Checked">
                        <i:InvokeCommandAction Command="{Binding StartSongrequestCommand}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Unchecked">
                        <i:InvokeCommandAction Command="{Binding StopSongrequestCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ToggleButton.ToolTip>
                    <ToolTip Content="Start / Stop Songrequest" />
                </ToggleButton.ToolTip>
            </ToggleButton>
            <Button
                Width="80"
                Height="80"
                Margin="0,0,10,0"
                HorizontalAlignment="Right"
                Command="{Binding AddSongCommand}"
                Style="{StaticResource MetroCircleButtonStyle}">
                <Rectangle
                    Width="46"
                    Height="46"
                    Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_add}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>

            <Separator HorizontalAlignment="Stretch" VerticalAlignment="Bottom" />
        </Grid>

        <Grid Grid.Row="1">
            <DockPanel>
                <WrapPanel DockPanel.Dock="Left">
                    <ToggleButton
                        Name="PlayPause"
                        Width="30"
                        Height="30"
                        IsChecked="{Binding Handler.IsPlaying}"
                        Style="{DynamicResource MetroCircleToggleButtonStyle}">
                        <Rectangle
                            Width="10"
                            Height="10"
                            Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}}">
                            <!--<Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_control_play}" />
                        </Rectangle.OpacityMask>-->
                            <Rectangle.Style>
                                <Style TargetType="{x:Type Rectangle}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Handler.IsPlaying}" Value="False">
                                            <Setter Property="OpacityMask">
                                                <Setter.Value>
                                                    <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_control_play}" />
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Handler.IsPlaying}" Value="True">
                                            <Setter Property="OpacityMask">
                                                <Setter.Value>
                                                    <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_control_pause}" />
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Rectangle.Style>
                        </Rectangle>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Checked">
                                <i:InvokeCommandAction Command="{Binding StartCommand, ElementName=Player}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="Unchecked">
                                <i:InvokeCommandAction Command="{Binding PauseCommand, ElementName=Player}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ToggleButton>
                    <Button
                        Width="25"
                        Height="25"
                        Command="{Binding NextSongCommand}"
                        Style="{StaticResource MetroCircleButtonStyle}">
                        <Rectangle
                            Width="10"
                            Height="10"
                            Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_navigate_next}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Button>

                </WrapPanel>
                <StackPanel
                    Margin="0,5,10,5"
                    HorizontalAlignment="Right"
                    DockPanel.Dock="Right"
                    Orientation="Horizontal">
                    <Rectangle
                        Width="10"
                        Height="10"
                        Margin="0,0,5,0"
                        Fill="Black">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_sound_3}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <Slider
                        x:Name="sliderVolume"
                        Width="100"
                        Margin="0,5,10,5"
                        HorizontalAlignment="Right"
                        DockPanel.Dock="Right"
                        Maximum="100"
                        Minimum="1"
                        Template="{StaticResource MetroHorizontalSliderWithValueOnThumb}"
                        Value="85" />
                </StackPanel>

            </DockPanel>
            <Separator HorizontalAlignment="Stretch" VerticalAlignment="Bottom" />
        </Grid>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="157*" />
                <ColumnDefinition Width="563*" />
            </Grid.ColumnDefinitions>
            <yt:CefYoutubeController
                Name="Player"
                Width="100"
                Height="100"
                Margin="30,0,0,0"
                HorizontalAlignment="Left"
                CurrentQuality="hd1080"
                VideoId="{Binding Handler.Player.CurrentSong.VideoID}"
                Volume="{Binding ElementName=sliderVolume, Path=Value}" />

            <StackPanel
                Grid.Column="1"
                Margin="10"
                Orientation="Vertical">
                <DockPanel>
                    <TextBlock
                        HorizontalAlignment="Left"
                        DockPanel.Dock="Left"
                        Text="Title: " />
                    <TextBlock
                        HorizontalAlignment="Right"
                        DockPanel.Dock="Right"
                        Text="{Binding Handler.Player.CurrentSong.Title}" />
                </DockPanel>
                <DockPanel>
                    <TextBlock
                        HorizontalAlignment="Left"
                        DockPanel.Dock="Left"
                        Text="Length: " />
                    <TextBlock
                        HorizontalAlignment="Right"
                        DockPanel.Dock="Right"
                        Text="{Binding Handler.Player.CurrentSong.Length}" />
                </DockPanel>

                <DockPanel>
                    <TextBlock
                        HorizontalAlignment="Left"
                        DockPanel.Dock="Left"
                        Text="Url: " />
                    <TextBlock
                        HorizontalAlignment="Right"
                        DockPanel.Dock="Right"
                        Text="{Binding Handler.Player.CurrentSong.Url}" />
                </DockPanel>
                <DockPanel>
                    <TextBlock
                        HorizontalAlignment="Left"
                        DockPanel.Dock="Left"
                        Text="Requester: " />
                    <TextBlock
                        HorizontalAlignment="Right"
                        DockPanel.Dock="Right"
                        Text="{Binding Handler.Player.CurrentSong.Requester}" />
                </DockPanel>
            </StackPanel>

            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Visibility" Value="Hidden" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Handler.IsPlaying}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
        </Grid>

        <Grid Grid.Row="3">
            <DataGrid
                AutoGenerateColumns="False"
                CanUserAddRows="False"
                CanUserSortColumns="False"
                ItemsSource="{Binding Handler.SongList, UpdateSourceTrigger=PropertyChanged}"
                SelectedItem="{Binding Handler.SelectedSong}">
                <DataGrid.Columns>
                    <DataGridTextColumn
                        Width="*"
                        Binding="{Binding Path=Title}"
                        CanUserSort="False"
                        Header="Title"
                        IsReadOnly="True" />
                </DataGrid.Columns>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction Command="{Binding PlaySongCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </DataGrid>
        </Grid>

    </Grid>
</controls:MetroContentControl>
